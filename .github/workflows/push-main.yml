name: Cloud Formation Templates Validation

on:
  push:
    branches:
      - main
jobs:
  deploy-on-push-main:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Node v16
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Run unitary Tests
        run: npm ci && npm run test:ci
            
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST}}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |  
              cp $HOME/.profile.save $HOME/.profile           
              source $HOME/.profile
                REPOSITORY_URL=$(echo "${{github.repositoryUrl}}" | sed s#git://#https://${{secrets.GH_TOKEN}}@#)  
                FILE_START_APP=$HOME/start_backend.sh
                FILE_SET_ENV_VAR=$HOME/backend_env.sh
              rm $FILE_START_APP
              rm $FILE_SET_ENV_VAR

              echo 'export BACKEND_PORT=${{secrets.BACKEND_PORT}}'>> $FILE_SET_ENV_VAR

              echo Creating script to initialize app
              echo 'pm2 describe ${{secrets.APP_NAME}} > /dev/null
              not_exists=$?
              if [ "${not_exists}" -ne 0 ]; then      
                cd "$HOME/${{ secrets.FOLDER_PROJECT }}"          
                pm2 start npm --name ${{secrets.APP_NAME}} -- run start:prod -- -p 3000
                pm2 save              
              else
                pm2 restart ${{secrets.APP_NAME}}              
              fi' >> $FILE_START_APP        
              
              chmod +x $FILE_START_APP
              chmod +x $FILE_SET_ENV_VAR
              if grep -Fxq "source $FILE_START_APP" $HOME/.profile; then
                echo "source $FILE_START_APP" >> $HOME/.profile  
              fi              
              if grep -Fxq "source $FILE_SET_ENV_VAR" $HOME/.profile; then
                echo "source $FILE_SET_ENV_VAR" >> $HOME/.profile
              fi
              if [[ ! -e ${{ secrets.FOLDER_PROJECT }} ]]; then
                git clone $REPOSITORY_URL ${{ secrets.FOLDER_PROJECT }}
                cd ${{ secrets.FOLDER_PROJECT }}                                 
              else
                cd ${{ secrets.FOLDER_PROJECT }}           
                git pull $REPOSITORY_URL
              fi
              REPOSITORY_URL=""
              npm ci              
              source $FILE_SET_ENV_VAR
              npm run migrate:prod              
              source $FILE_START_APP
              